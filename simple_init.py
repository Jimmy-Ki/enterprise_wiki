#!/usr/bin/env python3
"""
简化的数据库初始化脚本
统一在一个应用上下文中创建管理员用户和示例文章
"""

import os
import sys
from datetime import datetime

# 添加项目根目录到Python路径
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import create_app, db
from app.models.user import User, Role
from app.models.wiki import Page, Category

def main():
    """主函数"""
    app = create_app()

    with app.app_context():
        print("开始初始化数据库...")

        try:
            # 确保角色表已初始化
            print("\n=== 初始化角色 ===")
            Role.insert_roles()

            # 检查管理员用户是否已存在
            admin_email = 'admin@jimmyki.com'
            admin_user = User.query.filter_by(email=admin_email).first()

            if admin_user:
                print(f"管理员用户 {admin_email} 已存在")
            else:
                # 获取管理员角色
                admin_role = Role.query.filter_by(name='Administrator').first()
                if not admin_role:
                    print("错误：未找到管理员角色")
                    return

                # 创建管理员用户
                admin_user = User(
                    email=admin_email,
                    username='admin',
                    name='Administrator',
                    password='jG679322',
                    confirmed=True,
                    is_active=True,
                    email_verified=True,
                    role=admin_role
                )

                db.session.add(admin_user)
                db.session.commit()
                print(f"成功创建管理员用户: {admin_email}")

            # 创建示例分类
            print("\n=== 创建示例分类 ===")
            categories_data = [
                {'name': '技术文档', 'description': '技术开发相关文档和教程'},
                {'name': '产品说明', 'description': '产品功能介绍和使用说明'},
                {'name': '公司制度', 'description': '公司规章制度和管理流程'},
                {'name': '项目文档', 'description': '项目相关文档和进度跟踪'},
                {'name': '培训资料', 'description': '员工培训和学习资料'}
            ]

            categories = {}
            for cat_data in categories_data:
                category = Category.query.filter_by(name=cat_data['name']).first()
                if category:
                    print(f"分类 '{cat_data['name']}' 已存在")
                    categories[cat_data['name']] = category
                else:
                    category = Category(
                        name=cat_data['name'],
                        description=cat_data['description'],
                        is_public=True
                    )
                    db.session.add(category)
                    db.session.commit()
                    categories[cat_data['name']] = category
                    print(f"创建分类: {cat_data['name']}")

            # 创建示例文章
            print("\n=== 创建示例文章 ===")

            # 定义文章数据
            articles_data = [
                {
                    'title': '欢迎使用企业Wiki系统',
                    'content': '''# 欢迎使用企业Wiki系统

欢迎使用我们的企业知识管理平台！这个系统旨在帮助团队更好地组织、分享和协作知识。

## 主要功能

### 📝 文档编辑
- 支持Markdown语法
- 实时预览功能
- 版本控制和历史记录
- 多媒体内容支持

### 🔍 搜索功能
- 全文搜索
- 标签分类
- 智能推荐

### 👥 协作功能
- 多人协作编辑
- 评论和讨论
- 权限管理
- 通知系统

### 📊 组织管理
- 部门和项目管理
- 用户权限控制
- 访问日志记录

## 快速开始

1. **浏览文档** - 在左侧导航栏中浏览不同的分类和文档
2. **搜索内容** - 使用搜索框快速找到您需要的信息
3. **创建文档** - 点击"新建文档"开始创建您的内容
4. **协作编辑** - 邀请团队成员一起编辑和完善文档

## 技术支持

如果您在使用过程中遇到任何问题，请联系技术支持团队或查看我们的帮助文档。

---

祝您使用愉快！''',
                    'category': '技术文档'
                },
                {
                    'title': '项目管理流程指南',
                    'content': '''# 项目管理流程指南

本文档介绍我们公司的项目管理流程和最佳实践。

## 项目生命周期

### 1. 项目启动阶段
- **项目立项**: 提交项目申请书，明确项目目标和范围
- **团队组建**: 确定项目经理和核心团队成员
- **需求分析**: 收集和分析用户需求
- **制定计划**: 制定详细的项目计划和时间表

### 2. 项目规划阶段
- **工作分解**: 将项目任务分解为可管理的工作包
- **资源分配**: 分配人力、物力和财力资源
- **风险评估**: 识别潜在风险并制定应对策略
- **质量计划**: 制定质量标准和验收标准

### 3. 项目执行阶段
- **任务执行**: 按照计划执行各项任务
- **进度跟踪**: 定期跟踪项目进度和成本
- **质量控制**: 确保工作成果符合质量要求
- **沟通协调**: 保持与各利益相关者的沟通

### 4. 项目监控阶段
- **绩效监控**: 监控项目绩效指标
- **变更管理**: 管理项目变更请求
- **风险监控**: 持续监控和应对风险
- **报告机制**: 定期向管理层报告项目状态

### 5. 项目收尾阶段
- **项目验收**: 完成项目验收和交付
- **经验总结**: 总结项目经验和教训
- **文档归档**: 整理和归档项目文档
- **团队解散**: 完成团队解散和资源释放

## 最佳实践

1. **明确目标**: 确保项目目标清晰、可衡量
2. **持续沟通**: 保持团队内部和外部沟通的畅通
3. **风险管理**: 主动识别和管理项目风险
4. **质量优先**: 在整个项目周期中重视质量控制
5. **持续改进**: 不断总结经验并改进流程

---

更多信息请参考项目管理手册或咨询项目管理办公室(PMO)。''',
                    'category': '项目文档'
                },
                {
                    'title': '员工信息安全规范',
                    'content': '''# 员工信息安全规范

为保护公司信息资产安全，所有员工必须遵守以下信息安全规范。

## 基本安全原则

### 1. 账户安全
- **强密码要求**: 密码长度至少8位，包含大小写字母、数字和特殊字符
- **定期更换**: 每90天更换一次密码
- **禁止共享**: 不得将个人账户借给他人使用
- **及时报告**: 发现账户异常应立即报告IT部门

### 2. 设备安全
- **屏幕锁定**: 离开座位时必须锁定计算机屏幕
- **设备保管**: 妥善保管公司配备的电子设备
- **丢失报告**: 设备丢失或被盗应在24小时内报告
- **软件安装**: 未经许可不得安装未经授权的软件

### 3. 网络安全
- **VPN使用**: 远程访问必须使用公司VPN
- **Wi-Fi安全**: 禁止使用不安全的公共Wi-Fi处理工作
- **邮件安全**: 警惕钓鱼邮件，不点击可疑链接
- **数据传输**: 敏感数据传输必须使用加密方式

## 数据分类和保护

### 机密信息
- **定义**: 泄露会给公司造成严重损失的信息
- **示例**: 财务数据、战略计划、客户名单、技术机密
- **保护要求**: 加密存储、访问控制、审计日志

### 内部信息
- **定义**: 仅限公司内部使用的信息
- **示例**: 内部政策、工作流程、员工通讯录
- **保护要求**: 访问控制、内部网络传输

### 公开信息
- **定义**: 可以对外公开的信息
- **示例**: 产品介绍、招聘信息、新闻稿
- **保护要求**: 基本的信息准确性检查

## 违规处理

违反信息安全规范的后果包括：
- 口头警告
- 书面警告
- 停职检查
- 解除劳动合同
- 法律责任追究

## 联系信息

- **IT服务台**: ext. 8888
- **信息安全邮箱**: security@company.com

---

请所有员工仔细阅读并严格遵守以上规范。安全是每个人的责任！''',
                    'category': '公司制度'
                },
                {
                    'title': '产品功能介绍',
                    'content': '''# 产品功能介绍

我们的企业Wiki系统提供了全面的知识管理解决方案，帮助您的团队更好地组织和共享知识。

## 核心功能特性

### 📝 强大的编辑器

#### Markdown支持
- **实时预览**: 输入时实时显示格式化效果
- **语法高亮**: 代码块自动语法高亮
- **表格编辑**: 支持复杂表格的创建和编辑
- **数学公式**: 支持LaTeX数学公式输入
- **快捷键**: 丰富的快捷键提高编辑效率

### 🔄 版本控制

#### 完整的历史记录
- **自动保存**: 编辑时自动保存版本
- **变更追踪**: 清晰显示每次变更内容
- **版本对比**: 可视化对比不同版本差异
- **一键恢复**: 快速恢复到历史版本

### 🔍 智能搜索

#### 全文搜索
- **内容搜索**: 搜索文档标题和内容
- **高级筛选**: 按分类、作者、时间筛选
- **搜索建议**: 智能搜索提示和自动完成
- **搜索历史**: 保存和重用搜索历史

### 📁 组织管理

#### 分类体系
- **层级分类**: 支持多级分类结构
- **标签系统**: 灵活的标签分类
- **自定义字段**: 根据需要添加自定义属性
- **批量操作**: 批量管理文档和分类

#### 权限控制
- **细粒度权限**: 页面级别的读写权限控制
- **角色管理**: 基于角色的权限分配
- **访问控制**: 公开、内部、私密等多种访问模式
- **审批流程**: 文档发布前的审批工作流

## 技术特点

### 🚀 高性能
- **快速加载**: 优化的前端性能，秒级加载
- **并发处理**: 支持大量用户同时访问
- **缓存机制**: 多层缓存提升响应速度
- **CDN支持**: 全球CDN加速访问

### 🔒 安全性
- **数据加密**: 传输和存储全程加密
- **安全审计**: 完整的操作审计日志
- **备份恢复**: 自动备份和灾难恢复
- **权限控制**: 企业级权限管理体系

### 📱 多终端
- **响应式设计**: 适配桌面、平板、手机
- **移动应用**: 原生移动应用支持
- **离线编辑**: 支持离线编辑和同步
- **推送通知**: 实时消息推送通知

## 部署方式

### 云端部署
- **SaaS模式**: 免安装，开箱即用
- **自动更新**: 系统自动升级维护
- **弹性扩容**: 根据需求自动扩展资源
- **全球可用**: 多区域部署保证可用性

### 本地部署
- **私有化部署**: 数据完全自主可控
- **定制开发**: 支持深度定制和扩展
- **内网集成**: 与内部系统无缝集成
- **合规要求**: 满足特殊行业合规要求

---

联系我们了解更多详情或预约产品演示。''',
                    'category': '产品说明'
                },
                {
                    'title': '新员工入职培训手册',
                    'content': '''# 新员工入职培训手册

欢迎加入我们的团队！这本手册将帮助您快速了解公司文化、规章制度和工作流程。

## 入职第一天

### 📋 必办手续
1. **人事手续**
   - 签订劳动合同
   - 填写员工信息登记表
   - 领取工牌和办公用品
   - 设置公司邮箱账户

2. **IT设置**
   - 领取办公设备（电脑、显示器等）
   - 设置系统账户和密码
   - 安装必要的工作软件
   - 连接公司网络和打印机

3. **办公环境**
   - 熟悉办公区域和设施
   - 了解会议室使用规则
   - 认识团队成员和邻居同事
   - 了解餐厅、休息区等公共设施

### 🎯 第一周目标
- 了解公司基本情况和业务
- 认识团队成员和协作方
- 熟悉工作环境和设备使用
- 初步了解岗位职责和工作流程

## 公司概况

### 🏢 企业简介
我们是一家专注于企业知识管理解决方案的科技公司，致力于帮助企业更好地组织、分享和协作知识。

### 🌟 企业文化
- **客户第一**: 以客户需求为导向
- **团队协作**: 重视团队合作和沟通
- **创新进取**: 鼓励创新和持续改进
- **诚信负责**: 坚持诚信经营和负责任的态度

## 规章制度

### ⏰ 工作时间
- **标准工作时间**: 周一至周五 9:00-18:00
- **午休时间**: 12:00-13:00
- **弹性工作**: 部分岗位支持弹性工作制
- **加班政策**: 加班需提前申请，可调休或发放加班费

### 📅 考勤管理
- **签到方式**: 使用公司OA系统签到
- **请假流程**: 需提前在系统中提交申请
- **出差申请**: 出差需提前申请并报备行程
- **迟到早退**: 多次迟到早退将影响绩效考核

### 💻 信息系统使用
- **账户安全**: 妥善保管个人账户密码
- **软件安装**: 未经许可不得安装非工作软件
- **网络使用**: 禁止访问不良网站和下载大文件
- **数据保护**: 严格遵守公司数据安全规定

## 福利待遇

### 💰 薪酬福利
- **基本工资**: 月度基本工资
- **绩效奖金**: 根据绩效考核发放
- **年终奖**: 年度年终奖金
- **调薪机制**: 年度调薪机制

### 🏥 社会保险
- **五险一金**: 养老、医疗、失业、工伤、生育保险和住房公积金
- **补充医疗**: 额外的商业医疗保险
- **年度体检**: 每年一次免费健康体检
- **带薪病假**: 每年10天带薪病假

### 🎊 其他福利
- **带薪年假**: 根据工龄享受5-15天带薪年假
- **节日福利**: 重要节日礼品或礼金
- **团建活动**: 定期组织团队建设活动
- **培训机会**: 提供专业技能培训机会

## 培训发展

### 📚 入职培训
- **公司培训**: 了解公司文化、制度和业务
- **岗位培训**: 学习岗位相关知识和技能
- **系统培训**: 熟悉公司使用的各种系统工具
- **安全培训**: 信息安全和办公安全培训

### 📈 职业发展
- **晋升通道**: 明晰的职业晋升通道
- **岗位轮换**: 支持跨部门岗位轮换
- **内部竞聘**: 优先考虑内部员工晋升机会
- **发展规划**: 帮助员工制定个人职业发展规划

## 常见问题

### Q: 如何申请办公用品？
A: 通过行政系统提交申请，一般2个工作日内配发。

### Q: 加班如何计算？
A: 工作日加班按1.5倍工资计算，周末加班按2倍工资计算，法定节假日加班按3倍工资计算。

### Q: 如何报销费用？
A: 使用公司财务系统提交报销申请，部门经理审批后由财务处理。

### Q: 公司有年假吗？
A: 有，根据工龄每年5-15天带薪年假，需要提前申请并安排好工作交接。

### Q: 如何获得技术支持？
A: 首先联系部门导师，复杂问题可联系IT服务台。

## 联系方式

### 重要电话
- **前台**: ext. 8000
- **人事部**: ext. 8001
- **财务部**: ext. 8002
- **IT服务台**: ext. 8888
- **行政部**: ext. 8003

### 邮箱地址
- **人事部**: hr@company.com
- **财务部**: finance@company.com
- **IT支持**: it@company.com
- **行政部**: admin@company.com

---

祝您工作愉快，在公司的职业生涯更加精彩！如有任何问题，请随时联系您的导师或人事部门。''',
                    'category': '培训资料'
                }
            ]

            created_articles_count = 0

            for article_data in articles_data:
                # 检查文章是否已存在
                existing_article = Page.query.filter_by(title=article_data['title']).first()
                if existing_article:
                    print(f"文章 '{article_data['title']}' 已存在")
                else:
                    # 获取分类
                    category = categories.get(article_data['category'])
                    if not category:
                        print(f"警告：未找到分类 '{article_data['category']}'")
                        continue

                    # 创建文章
                    article = Page(
                        title=article_data['title'],
                        content=article_data['content'],
                        author_id=admin_user.id,
                        last_editor_id=admin_user.id,
                        category_id=category.id,
                        is_published=True,
                        is_public=True,
                        published_at=datetime.utcnow()
                    )

                    # 生成摘要和HTML内容
                    article.generate_summary()
                    article.generate_slug()

                    db.session.add(article)
                    db.session.commit()
                    created_articles_count += 1
                    print(f"创建文章: {article_data['title']}")

            print(f"\n✅ 数据库初始化完成！")
            print(f"✅ 管理员用户: {admin_email}")
            print(f"✅ 创建分类: {len(categories)} 个")
            print(f"✅ 创建文章: {created_articles_count} 个")

            print(f"\n🎉 您现在可以使用以下信息登录：")
            print(f"📧 邮箱: {admin_email}")
            print(f"👤 用户名: admin")
            print(f"🔑 密码: jG679322")

        except Exception as e:
            print(f"❌ 初始化过程中发生错误: {str(e)}")
            import traceback
            traceback.print_exc()
            db.session.rollback()

if __name__ == '__main__':
    main()