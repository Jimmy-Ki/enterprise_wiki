"""add_oauth_and_sso_tables

Revision ID: d5cc8e9404d4
Revises: 3a4878198306
Create Date: 2025-11-01 12:14:37.888583

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd5cc8e9404d4'
down_revision = '3a4878198306'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create oauth_providers table
    op.create_table('oauth_providers',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('display_name', sa.String(length=100), nullable=False),
        sa.Column('client_id', sa.String(length=200), nullable=False),
        sa.Column('client_secret', sa.String(length=500), nullable=False),
        sa.Column('authorize_url', sa.String(length=500), nullable=False),
        sa.Column('token_url', sa.String(length=500), nullable=False),
        sa.Column('user_info_url', sa.String(length=500), nullable=False),
        sa.Column('scope', sa.String(length=200), nullable=False),
        sa.Column('user_id_field', sa.String(length=50), nullable=True),
        sa.Column('email_field', sa.String(length=50), nullable=True),
        sa.Column('name_field', sa.String(length=50), nullable=True),
        sa.Column('username_field', sa.String(length=50), nullable=True),
        sa.Column('avatar_field', sa.String(length=50), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('auto_register', sa.Boolean(), nullable=True),
        sa.Column('skip_2fa', sa.Boolean(), nullable=True),
        sa.Column('default_role', sa.String(length=64), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_oauth_providers_id'), 'oauth_providers', ['id'], unique=False)

    # Create oauth_accounts table
    op.create_table('oauth_accounts',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('provider_id', sa.Integer(), nullable=False),
        sa.Column('provider_user_id', sa.String(length=200), nullable=False),
        sa.Column('access_token', sa.Text(), nullable=True),
        sa.Column('refresh_token', sa.Text(), nullable=True),
        sa.Column('token_expires_at', sa.DateTime(), nullable=True),
        sa.Column('email', sa.String(length=64), nullable=False),
        sa.Column('username', sa.String(length=64), nullable=True),
        sa.Column('name', sa.String(length=64), nullable=True),
        sa.Column('avatar_url', sa.String(length=500), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('last_login_at', sa.DateTime(), nullable=True),
        sa.Column('login_count', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['provider_id'], ['oauth_providers.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('provider_id', 'provider_user_id', name='uk_provider_user'),
        sa.UniqueConstraint('user_id', 'provider_id', name='uk_user_provider')
    )
    op.create_index(op.f('ix_oauth_accounts_id'), 'oauth_accounts', ['id'], unique=False)

    # Create sso_sessions table
    op.create_table('sso_sessions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('session_id', sa.String(length=128), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('oauth_account_id', sa.Integer(), nullable=False),
        sa.Column('ip_address', sa.String(length=45), nullable=True),
        sa.Column('user_agent', sa.String(length=500), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('expires_at', sa.DateTime(), nullable=False),
        sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(['oauth_account_id'], ['oauth_accounts.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('session_id')
    )
    op.create_index(op.f('ix_sso_sessions_id'), 'sso_sessions', ['id'], unique=False)
    op.create_index('ix_sso_sessions_session_id', 'sso_sessions', ['session_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_sso_sessions_session_id', table_name='sso_sessions')
    op.drop_index(op.f('ix_sso_sessions_id'), table_name='sso_sessions')
    op.drop_table('sso_sessions')
    op.drop_index(op.f('ix_oauth_accounts_id'), table_name='oauth_accounts')
    op.drop_table('oauth_accounts')
    op.drop_index(op.f('ix_oauth_providers_id'), table_name='oauth_providers')
    op.drop_table('oauth_providers')
    # ### end Alembic commands ###
